/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 *                          https://www.jrs.net.br
 *
 * Autor...: Jrs
 * Data....: 16/02/2024
 * Objetivo: Objetos do banco de dados
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/

--
-- Definição de Domínios
--
CREATE DOMAIN DM_TPO_INT AS INTEGER;
CREATE DOMAIN DM_TPO_NUM AS NUMERIC(15,4);
CREATE DOMAIN DM_TPO_DAT AS DATE;
CREATE DOMAIN DM_TXT_001 AS VARCHAR(001);
CREATE DOMAIN DM_TXT_002 AS VARCHAR(002);
CREATE DOMAIN DM_TXT_003 AS VARCHAR(003);
CREATE DOMAIN DM_TXT_004 AS VARCHAR(004);
CREATE DOMAIN DM_TXT_005 AS VARCHAR(005);
CREATE DOMAIN DM_TXT_010 AS VARCHAR(010);
CREATE DOMAIN DM_TXT_025 AS VARCHAR(025);
CREATE DOMAIN DM_TXT_050 AS VARCHAR(050);
CREATE DOMAIN DM_TXT_100 AS VARCHAR(100);
--
-- Definição de Generators
--
CREATE GENERATOR GEN_CLIENTE;
SET GENERATOR GEN_CLIENTE TO 0;

CREATE GENERATOR GEN_PRODUTO;
SET GENERATOR GEN_PRODUTO TO 0;
--
-- Definição de Tabelas
--
--DROP TABLE SEQUENCIA
CREATE TABLE SEQUENCIA
(
    CD_SEQUENCIA DM_TPO_INT NOT NULL,
    NM_SEQUENCIA DM_TXT_025 NOT NULL,
    NR_SEQUENCIA DM_TPO_INT NOT NULL
);
ALTER TABLE SEQUENCIA
    ADD CONSTRAINT PK_SEQUENCIA
        PRIMARY KEY ( CD_SEQUENCIA );
--
--
INSERT INTO SEQUENCIA VALUES ( 1, 'PEDIDO', 0 );
UPDATE SEQUENCIA SET NR_SEQUENCIA = 0;
--
--
--DROP TABLE CLIENTE;
CREATE TABLE CLIENTE
(
    CD_CLIENTE DM_TPO_INT NOT NULL    ,
    NM_CLIENTE DM_TXT_100 NOT NULL    ,
    AP_CLIENTE DM_TXT_100             ,
    TP_CLIENTE DM_TXT_010 NOT NULL    ,
    NR_CLIENTE DM_TXT_025 NOT NULL  ,
    ED_CLIENTE DM_TXT_100             ,
    FN_CLIENTE DM_TXT_025            ,
    IN_CLIENTE DM_TXT_010 NOT NULL
);
ALTER TABLE CLIENTE
    ADD CONSTRAINT PK_CLIENTE 
        PRIMARY KEY ( CD_CLIENTE );
--
--
--DROP TABLE PRODUTO;
CREATE TABLE PRODUTO
(
    CD_PRODUTO DM_TPO_INT NOT NULL    ,
    NM_PRODUTO DM_TXT_100 NOT NULL    ,
    AP_PRODUTO DM_TXT_100             ,
    VL_PRODUTO DM_TPO_NUM NOT NULL    ,
    IN_PRODUTO DM_TXT_010 NOT NULL
);
ALTER TABLE PRODUTO
    ADD CONSTRAINT PK_PRODUTO 
        PRIMARY KEY ( CD_PRODUTO );
--
--
--DROP TABLE PEDIDO;
CREATE TABLE PEDIDO
(
    NR_PEDIDO     DM_TPO_INT NOT NULL    ,
    NM_PEDIDO   DM_TXT_050 NOT NULL    ,
    DT_PEDIDO   DM_TPO_DAT NOT NULL    ,
    CD_CLIENTE     DM_TPO_INT NOT NULL    ,
    TX_PEDIDO   DM_TXT_100             ,
    IN_PEDIDO    DM_TXT_010 NOT NULL
);
ALTER TABLE PEDIDO
    ADD CONSTRAINT PK_PEDIDO 
        PRIMARY KEY ( NR_PEDIDO );
--
--
--DROP TABLE PEDIDO_ITEM;
CREATE TABLE PEDIDO_ITEM
(
    NR_PEDIDO     DM_TPO_INT NOT NULL    ,
    SQ_PEDIDO    DM_TPO_INT NOT NULL ,
    CD_PRODUTO  DM_TPO_INT NOT NULL    ,
    QT_PEDIDO   DM_TPO_INT NOT NULL    ,
    VL_PEDIDO     DM_TPO_NUM NOT NULL    ,
    IN_PEDIDO    DM_TXT_010 NOT NULL
);
ALTER TABLE PEDIDO_ITEM
    ADD CONSTRAINT PK_PEDIDO_ITEM 
        PRIMARY KEY ( NR_PEDIDO, SQ_PEDIDO );
    
ALTER TABLE PEDIDO_ITEM
    ADD CONSTRAINT FK_PEDIDO_ITEM 
        FOREIGN KEY ( NR_PEDIDO ) REFERENCES PEDIDO ( NR_PEDIDO ) ON DELETE CASCADE;
--
-- Definição de Views
--
CREATE OR ALTER VIEW VW_PEDIDO
AS
    SELECT T1.NR_PEDIDO,
           T1.NM_PEDIDO,
           T1.DT_PEDIDO,
           T1.CD_CLIENTE,
           T3.NM_CLIENTE,
           T1.TX_PEDIDO,
          
          ( SELECT SUM( QT_PEDIDO )
            FROM PEDIDO_ITEM 
            WHERE 1=1
              AND NR_PEDIDO = T1.NR_PEDIDO ) AS QT_PEDIDO,

          ( SELECT SUM( QT_PEDIDO * VL_PEDIDO )
            FROM PEDIDO_ITEM 
            WHERE 1=1
              AND NR_PEDIDO = T1.NR_PEDIDO ) AS VL_PEDIDO,
              
          T1.IN_PEDIDO
    
    FROM PEDIDO T1 

    INNER JOIN CLIENTE T3
      ON T3.CD_CLIENTE = T1.CD_CLIENTE

    WHERE 1=1;

--
--
CREATE OR ALTER VIEW VW_PEDIDO_COMPLETA
AS
    SELECT T1.NR_PEDIDO  ,
           T1.NM_PEDIDO  ,
           T1.DT_PEDIDO  ,
           T1.CD_CLIENTE ,
           T3.NM_CLIENTE ,
           T1.TX_PEDIDO  ,
           T1.IN_PEDIDO  ,
           T2.SQ_PEDIDO  ,
           T2.CD_PRODUTO ,
           T4.NM_PRODUTO ,
           T2.QT_PEDIDO  ,
           T2.VL_PEDIDO
    FROM PEDIDO T1 

    INNER JOIN PEDIDO_ITEM T2
      ON T2.NR_PEDIDO = T1.NR_PEDIDO
      
    INNER JOIN CLIENTE T3
      ON T3.CD_CLIENTE = T1.CD_CLIENTE

    INNER JOIN PRODUTO T4
      ON T4.CD_PRODUTO = T2.CD_PRODUTO

    WHERE 1=1    

--
-- Definição de Triggers
--
SET TERM !! ;

CREATE TRIGGER TRG_CLIENTE_SEQ FOR CLIENTE ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CD_CLIENTE IS NULL) THEN
    NEW.CD_CLIENTE = GEN_ID( GEN_CLIENTE, 1);
END!!

CREATE TRIGGER TRG_PRODUTO_SEQ FOR PRODUTO ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CD_PRODUTO IS NULL) THEN
    NEW.CD_PRODUTO = GEN_ID( GEN_PRODUTO, 1);
END!!

SET TERM ; !!
--
-- Definição de Stored Procedures
--

